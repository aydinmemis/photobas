import React from 'react';
import PropTypes from 'prop-types';
import { View, TouchableOpacity, Text, ImageBackground, StyleSheet } from 'react-native';
import Ionicons from 'react-native-vector-icons/Ionicons';
import Icon from 'react-native-vector-icons/FontAwesome';
// import Icon from 'react-native-vector-icons/FontAwesome';

const styles = StyleSheet.create({
  container: {
    flex: 1, // 1:1
    flexDirection: 'column',
  },
  productWrapper: {
    flex: 1,
  },
  productImage: {
    ...StyleSheet.absoluteFillObject,
  },
  content: {
    flexGrow: 1,
    marginLeft: 10,
    marginRight: 5,
  },
  productOpacity: {
    flex: 1,
    flexDirection: 'column',
    alignItems: 'flex-start',
    justifyContent: 'space-between',
    // alignContent: 'center',
    backgroundColor: 'rgba(0,0,0,0.5)',
  },
  selectImageContent: {
    flex: 1,

    backgroundColor: '#fff',
  },
  productContent: {
    // paddingTop: 30,
    marginHorizontal: 15,
    justifyContent: 'flex-start',
    marginBottom: 15,
  },
  contentProductName: {
    fontSize: 16,
    // fontWeight: '700',
    fontFamily: 'Roboto-Bold',
    color: '#fff',
  },
  contentProductDescription: {
    fontSize: 14,
    // fontWeight: '700',
    fontFamily: 'Roboto-Light',
    color: 'gray',
  },
  contentProductPrice: {
    fontSize: 14,
    fontWeight: '400',
    fontFamily: 'RobotoCondensed-Regular',
    color: 'red',
  },
  backButton: {
    paddingTop: 30,
    marginHorizontal: 15,
    justifyContent: 'flex-start',
  },
  adetView: {
    // paddingHorizontal: 5,
    margin: 5,
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center',
    // marginHorizontal: 5,
    // paddingHorizontal: 5,
  },
  sayac: {
    justifyContent: 'center',
    alignItems: 'center',
    padding: 5,
  },
  sayacText: {
    fontSize: 24,
    // fontWeight: '700',
    fontFamily: 'RobotoCondensed-Bold',
    color: '#262626',
  },
});

const ProductDetail = ({
  increment, decrement, productName, ImageUrl, description, price, categoryId, productId, itemWidth, adet, onPressBack,
}) => (
  <View style={styles.container}>
    <View style={styles.productWrapper}>
      <ImageBackground imageStyle={{ resizeMode: 'cover' }} style={styles.productImage} source={{ uri: ImageUrl }}>
        <View style={styles.productOpacity}>
          <View style={styles.backButton}>
            <TouchableOpacity onPress={onPressBack}>
              <Icon name="long-arrow-left" size={25} color="#fff" />
            </TouchableOpacity>
          </View>
          <View style={styles.productContent}>
            <Text style={styles.contentProductName}>bla bla</Text>
          </View>
        </View>
      </ImageBackground>
    </View>
    <View style={styles.selectImageContent}>
      <View
        style={{
          flex: 0.2,
          justifyContent: 'center',
          backgroundColor: 'yellow',
        }}
      >
        <View
          style={{
            flexDirection: 'row',

            justifyContent: 'space-between',
            alignItems: 'center',
            marginHorizontal: 15,
          }}
        >
          <View>
            <Text style={{ fontSize: 35, color: '#262626', fontFamily: 'Roboto-Bold' }}>15 TL</Text>
          </View>

          <View
            style={{
              flexDirection: 'row',
              justifyContent: 'space-around',
              height: 30,
              alignItems: 'center',
              //   borderWidth: 1,
              // borderColor: '#262626',
              width: 100,
            }}
          >
            <TouchableOpacity>
              <Icon name="minus" size={20} color="#262626" />
            </TouchableOpacity>
            <Text style={{ fontSize: 25, fontFamily: 'Roboto-Light', color: '#262626' }}>1</Text>
            <TouchableOpacity>
              <Icon name="plus" size={20} color="#262626" />
            </TouchableOpacity>
          </View>
        </View>
      </View>
    </View>
    <View style={{ height: 100, backgroundColor: 'gray' }} />
  </View>
);

ProductDetail.propTypes = {
  // onPress: PropTypes.func,
  productName: PropTypes.string,
  ImageUrl: PropTypes.string,
  description: PropTypes.string,
  price: PropTypes.number,
  categoryId: PropTypes.number,
  productId: PropTypes.number,
  itemWidth: PropTypes.number,
  increment: PropTypes.func,
  decrement: PropTypes.func,
  adet: PropTypes.number,
  onPressBack: PropTypes.func,
};

export default ProductDetail;
